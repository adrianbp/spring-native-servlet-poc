name: CI/CD Native Build ARM64

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: adrianbp/spring-native-servlet-poc-native-arm
  ENVIRONMENT_URL: ${{ secrets.DYNATRACE_ENVIRONMENT_URL }}
  API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests
      run: mvn clean test

  build-and-deploy-native-arm:
    name: Build and Deploy Native ARM64
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push native ARM64 image
      run: |
        docker buildx build \
          --platform linux/arm64 \
          --file Dockerfile.native \
          --tag ghcr.io/adrianbp/spring-native-servlet-poc-native-arm:latest \
          --tag ghcr.io/adrianbp/spring-native-servlet-poc-native-arm:${{ github.sha }} \
          --push \
          .
          
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
        
    - name: Update kubeconfig
      run: aws eks update-kubeconfig --region us-west-2 --name spring-native-poc-cluster
      
    - name: Deploy ARM64 Native to EKS
      run: |
        kubectl apply -f k8s/native-arm/
        kubectl rollout restart deployment/spring-native-app-arm -n spring-native-arm
        kubectl rollout status deployment/spring-native-app-arm -n spring-native-arm --timeout=300s
