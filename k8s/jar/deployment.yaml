apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-jar-app
  namespace: spring-jar
  labels:
    app: spring-jar-app
    version: jar
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-jar-app
      version: jar
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: spring-jar-app
        version: jar
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
        dynakube.dynatrace.com/inject: "true"
        opentelemetry.io/service-name: "spring-jar-app"
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - name: spring-jar-app
        image: ghcr.io/adrianbp/spring-native-servlet-poc-jar:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:h2:mem:testdb"
        - name: JAVA_OPTS
          value: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/users/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/users/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/users/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
